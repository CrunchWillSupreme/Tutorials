# -*- coding: utf-8 -*-
"""
Created on Wed Jun 12 23:11:32 2019

@author: Will Han
"""
# What makes top Spotify songs popular?
#Spotify top 2017 playlist clustering
import os
os.chdir(r'C:\Kaggle\Spotify-clustering')
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
import warnings
warnings.filterwarnings('ignore')

# Read and explore the data
# read in featuresdf.csv and store in named music
music = pd.read_csv("featuresdf.csv")
# look at first five rows of dataset
music.head()

# look at summary of dataset
music.describe(include = "all")

# Data Analysis
# We'll start off by creating two datasets, numeric and small, with some values removed
numeric = music.drop(['id', 'name', 'artists'], axis=1)
# I'm removing the below values since all the other values range between 0.0 and 1.0
# the other values are much larger, making it hard to see these values
small = numeric.drop(['tempo', 'duration_ms', 'key', 'loudness', 'time_signature'], axis=1)

# set color palette to pastel
sns.set_palette('pastel')

# create a bar chart of the mean values of the audio features in the small dataset
small.mean().plot.bar()
plt.title('Mean Values of Audio Features')
plt.show()

## Danceability
# mean value and distplot for danceability feature
print("Mean value for danceability:", music['danceability'].mean())
sns.distplot(music['danceability'])
plt.show()
#mean value of 0.697, majority of top tracks have high danceability rating - when and where do they play these songs?

## Energy
# mean value and distplot for energy feature
print("Mean value for danceability:", music['energy'].mean())
sns.distplot(music['energy'])
plt.show()
# mean value of 0.661, people seem to like energetic songs more than calm ones.  What are the ages of spotify users?

## Key
key_mapping = {0.0: 'C', 1.0: 'C♯,D♭', 2.0: 'D', 3.0: 'D♯,E♭', 4.0: 'E', 5.0: 'F', 6.0: 'F♯,G♭', 7.0: 'G', 8.0: 'G♯,A♭', 9.0: 'A', 10.0: 'A♯,B♭', 11.0: 'B'}
music['key'] = music['key'].map(key_mapping)

sns.countplot(x = 'key', data = music, order = music['key'].value_counts().index)
plt.title("Count of Song Keys")
plt.show()
# most common key among top tracks is C♯,D♭

## Loudness
#mean value and distplot for loudness feature
print('Mean value for loudness:', music['loudness'].mean())
sns.distplot(music['loudness'])
plt.show
# not sure about negative mean

## Mode
#print mean value for mode
print('Mean value for mode:', music['mode'].mean())
#map the binary value of mode to major/minor
mode_mapping = {1.0: "major", 0.0: "minor"}
music['mode'] = music['mode'].map(mode_mapping)
#draw a countplot of the values
sns.countplot(x = 'mode', data = music)
plt.title("Count of Major/Minor Songs")
plt.show()
# people lean more towards songs with a major mode than those with a minor mode.
# does this mean people like happier songs?

## Speechiness
#mean value and distplot for speechiness feature
print('Mean value of speechiness:', music['speechiness'].mean())
sns.distplot(music['speechiness'])
plt.show()
#speechiness is low, people prefer music than audiobooks or talks

## Acousticness
#mean value and distplot for acousticness features
print('Mean value of acousticness:', music['acousticness'].mean())
sns.distplot(music['acousticness'], color = 'red', label='Acousticness')
plt.show()
#mean value for acousticness is low at 0.166. People don't seem to stream acoustic songs as much non-acoustic ones.

## Instrumentalness
print('Mean value of Instrumentalness:', music['instrumentalness'].mean())
sns.distplot(music['instrumentalness'])
plt.show()
#Mean value for instrumentalness is really low at 0.00479.  People like songs with lyrics

## Liveness
#mean value and distplot for liveness feature
print('Mean value of liveness:valen', music['liveness'].mean())
sns.distplot(music['liveness'])
plt.show()
#mean value for liveness is low. 0.151.  People like to listen to live music at concerts, not on spotify

## Valence
#mean value and distplot for valence feature
print('Mean value for valence feature:', music['valence'].mean())
sns.distplot(music['valence'])
plt.show()
#Happy and sad songs are pretty evenly distributed at 0.517.  Some days are happy, some days are sad.

## Tempo
#mean value and distplot for tempo feature
print('Mean value for tempo feature:', music['tempo'].mean())
sns.distplot(music['tempo'])
plt.show()
# mean value for tempo is 119.202 bpm, pretty fast.  People like fast songs more than slow songs.

## Duration
# mean value and distplot for duration_ms feature
print('Mean value for duration_ms feature:', music['duration_ms'].mean())
sns.distplot(music['duration_ms'])
plt.show()
#mean value for duration is 218387 milliseconds, which is around 3 minutes and 38 seconds.  People dont like it when songs are too short or too long.

## Time signature
#mean value and distplot for time_signature feature
print('Mean value for time_signature feature:', music['time_signature'].mean())
sns.distplot(music['time_signature'])
plt.show()
#4/4 are most popular

##Correlation Heatmap
plt.figure(figsize = (16,5))
sns.heatmap(numeric.corr(), cmap="coolwarm", annot=True)
plt.show()
#Energy and loudness seem to be pretty correlated, which is not surprising.
#Energy and danceability has some correlation
